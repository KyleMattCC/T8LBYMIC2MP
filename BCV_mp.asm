DATA SEGMENT

K_BUF	DB	1

PLAYER	DB	00000001B
P1_SCORE DB 0
P2_SCORE DB 0

CURR_SEC DB 00000000B
;7-SEGMENT PATTERNS
SEVSEG0	DB	11000000B
SEVSEG9	DB	10011000B
SEVSEG8	DB	10000000B
SEVSEG7	DB	11111000B
SEVSEG6	DB	10000011B
SEVSEG5	DB	10010010B
SEVSEG4	DB	10011001B
SEVSEG3	DB	10110000B
SEVSEG2	DB	10100100B
SEVSEG1	DB	11111001B

ROW		DB	11111110B
;MATRIX PATTERN
ROW1	DB	024H
ROW2	DB	024H
ROW3	DB	0FFH
ROW4	DB	024H
ROW5	DB	024H
ROW6	DB	0FFH
ROW7	DB	024H
ROW8	DB	024H

;OCCUPIED?
B1	DB	000H
B2	DB	000H
B3	DB	000H
B4	DB	000H
B5	DB	000H
B6	DB	000H
B7	DB	000H
B8	DB	000H
B9	DB	000H

;PLAYER1 PATTERN
P11	DB 	000H
P12	DB 	000H
P13	DB 	000H
P14	DB 	000H
P15	DB 	000H
P16	DB 	000H
P17	DB 	000H
P18	DB 	000H

;PLAYER2 PATTERN
P21	DB 	000H
P22	DB 	000H
P23	DB 	000H
P24	DB 	000H
P25	DB 	000H
P26	DB 	000H
P27	DB 	000H
P28	DB 	000H

CURSOR_POS	 DB 80H
CURSOR_LIMIT DB 85H
ENT_CTR		 DB 0
LCD_INIT_OUT DB '     :0       :0',00H
				;0123456789abcdef
P1WIN_MES	 DB 'Player 1 wins!!!',00H
P2WIN_MES	 DB 'Player 2 wins!!!',00H
NOWIN_MES	 DB 'No winner :((!!!',00H
CLEAR_LCDROW DB '                ',00H
				
				
DATA ENDS

CODE	SEGMENT
	ASSUME	CS:CODE,DS:DATA,ES:CODE,SS:CODE

PPIC_C	EQU	1EH		;8255 Control Register
PPIC	EQU	1CH		;8255A C PORT
PPIB	EQU	1AH		;8255A B PORT
PPIA	EQU	18H		;8255A A PORT
LED		EQU 1BH		;LEDs
LED_C	EQU	1FH
SEV_SEG	EQU	19H		;SEVEN SEGMENT
STACK	EQU	0540H	;LCD
LCDC	EQU	00H
LCDC_S	EQU	02H
LCDD	EQU	04H
KEY		EQU	01H		;KEYBOARD
SPK		EQU	17H		;SPEAKER

	ORG		01000H	

START:
	XOR		AX,AX
	MOV		SS,AX
	MOV		SP,STACK 
	MOV		SI, OFFSET LCD_INIT_OUT
	CALL	INIT_LCD
	CALL 	INITIALIZE
	
;Set players name
SET_PNAME:
	MOV		CH, [CURSOR_POS]
	MOV		CL, [CURSOR_LIMIT]
	CMP		CH, 8EH
	JE		MAIN
	CMP		CH, CL
	JE		P2NAME
	MOV 	AH, CH 
	CALL 	LNXX
PNAME_SCAN
	IN 		AL, KEY
	TEST 	AL, 10000000B
	JNZ 	PNAME_SCAN
	CALL	NAMESCAN
	JMP		SET_PNAME
P2NAME:
	MOV		[CURSOR_POS], 89H
	MOV		[CURSOR_LIMIT], 8EH
	JMP		SET_PNAME
	
;SET:
	;CALL 	SET_TIMER
	
MAIN:
	;MOV 	AH, 02CH        Check if a second has passed         
	;INT 	021H
	CALL 	OUTPUT
	;TIMER

	;SUB 	DH, 01H
	;CMP		[CURR_SEC], DH
	;JNE		SKIP
	;INC		BX
	;CMP		BX, 0000AH
	;JE		SET
;SKIP:	
	IN 		AL, KEY
	TEST 	AL, 10000000B
	JNZ 	MAIN
	CALL 	SCAN
	CALL	CHECK
	JMP 	MAIN
	
SET_TIMER:
	;MOV		AH, 02CH         ;Get current second         
	;INT 	021H
	;MOV 	[CURR_SEC], DH
	;MOV		BX, 00000H
	INC		[PLAYER]
	
	RET
	
OUTPUT:
	PUSH	DX
	PUSH	CX
	MOV		CX, BX
	PUSH	BX
	PUSH	AX
	MOV		BX, 0008H
	MOV		ROW, 11111110B

RW:
;Matrix
	MOV		AL, [ROW1+BX-1]	;Column On LED Indicator
	OUT		PPIC, AL		;0 if off, 1 if on

	MOV		AL, [ROW]		;Row of Red
	OUT		PPIB, AL		;0 if on, 1 if off
	
	MOV		AL, 11111111B	;Row of Green
	OUT		PPIA,AL 		;0 is on, 1 if off

	CALL 	TIMER

;Player1
	MOV		AL, [P11+BX-1]	;Column On LED Indicator
	OUT		PPIC, AL		;0 if off, 1 if on

	
	MOV		AL, 11111111B	;Row of Red
	OUT		PPIB, AL		;0 if on, 1 if off

	MOV		AL, [ROW]		;Row of Green
	OUT		PPIA,AL 		;0 is on, 1 if off

	CALL 	TIMER

;Player2	
	MOV		AL, [P21+BX-1]	;Column On LED Indicator
	OUT		PPIC, AL		;0 if off, 1 if on
	
	MOV		AL, [ROW]		;Row of orange
	OUT		PPIB, AL
	OUT		PPIA, AL
	
	CALL	TIMER
 
	ROL 	[ROW], 1

	DEC 	BX
	JNZ 	RW

;7-SEGMENT
	MOV		AL, [SEVSEG0]
	OUT		SEV_SEG, AL
	CALL	TIMER

;LED
	TEST	[PLAYER], 00000001B
	JNE		LED2
	MOV		AL, 11110010B
	JMP		OUTLED
LED2:
	MOV		AL, 11110100B
OUTLED:
	OUT		LED, AL

	POP		AX
	POP		BX
	POP		CX
	POP		DX
	RET

;NAME INPUT
NAMESCAN:
	AND 	AL, 00011111B
	MOV 	BX, 0
	MOV 	DS, BX
	MOV 	BYTE PTR K_BUF, AL
	;KEY CLEAR
	OUT 	KEY, AL
	
	;DA is pressed
	CMP		AL, 16H
	JE		ENTER_PRESSED
	;Special keys are pressed
	CMP		AL, 0FH
	JA		RETSCAN
	;Valid keys are pressed
	MOV		AH, AL
	OR   	AH, 30H
	CALL 	CHAROUT
	MOV		[ENT_CTR], 0
	JMP		RETSCAN
	
ENTER_PRESSED:
	CMP		[ENT_CTR], 1
	JE		NAME_COMPLETE
	INC		[ENT_CTR]
	INC		[CURSOR_POS]
	JMP		RETSCAN
	
NAME_COMPLETE:
	MOV		[ENT_CTR], 0
	MOV		CH, [CURSOR_LIMIT]
	MOV		[CURSOR_POS], CH
		
RETSCAN:
	RET
	
;PLAYER INPUT
SCAN:
	AND 	AL, 00011111B
	MOV 	BX, 0
	MOV 	DS, BX
	MOV 	BYTE PTR K_BUF, AL
	;KEY CLEAR
	OUT 	KEY, AL
	
;0	
	CMP		AL, 00H
	JNE		L1
	XOR		AX, AX
	MOV 	CL, [B1]
	AND		CL, 0FFH		
	JNZ		FILL0
	TEST	[PLAYER], 00000001B
	JNE		J02
	MOV		[B1], 01H
	ADD 	[P11], 00000011B
	ADD		[P12], 00000011B
	CALL	SET_TIMER
	RET
J02:
	MOV		[B1], 02H
	ADD 	[P21], 00000011B
	ADD		[P22], 00000011B
	CALL	SET_TIMER
	RET
FILL0:
	CALL 	TONE
	RET 	

;1	
L1: CMP		AL, 01H
	JNE		L2
	XOR		AX, AX
	MOV 	CL, [B2]
	AND		CL, 0FFH		
	JNZ		FILL1
	TEST	[PLAYER], 00000001B
	JNE		J12
	MOV		[B2], 01H
	ADD 	[P11], 00011000B
	ADD		[P12], 00011000B
	CALL	SET_TIMER
	RET
J12:
	MOV		[B2], 02H
	ADD 	[P21], 00011000B
	ADD		[P22], 00011000B
	CALL	SET_TIMER
	RET	
FILL1:
	CALL 	TONE
	RET

;2
L2: CMP		AL, 02H
	JNE		L3
	XOR		AX, AX
	MOV 	CL, [B3]
	AND		CL, 0FFH		
	JNZ		FILL2
	TEST	[PLAYER], 00000001B
	JNE		J22
	MOV		[B3], 01H
	ADD 	[P11], 11000000B
	ADD		[P12], 11000000B
	CALL	SET_TIMER
	RET
J22:
	MOV		[B3], 02H
	ADD 	[P21], 11000000B
	ADD		[P22], 11000000B
	CALL	SET_TIMER
	RET
FILL2:
	CALL 	TONE
	RET

;3	
L3: CMP		AL, 03H
	JNE		L4
	XOR		AX, AX
	MOV 	CL, [B4]
	AND		CL, 0FFH		
	JNZ		FILL3
	TEST	[PLAYER], 00000001B
	JNE		J32
	MOV		[B4], 01H
	ADD 	[P14], 00000011B
	ADD		[P15], 00000011B
	CALL	SET_TIMER
	RET
J32:
	MOV		[B4], 02H
	ADD 	[P24], 00000011B
	ADD		[P25], 00000011B
	CALL	SET_TIMER
	RET	
FILL3:
	CALL 	TONE
	RET
	
;4	
L4: CMP		AL, 04H
	JNE		L5
	XOR		AX, AX
	MOV 	CL, [B5]
	AND		CL, 0FFH		
	JNZ		FILL4
	TEST	[PLAYER], 00000001B
	JNE		J42
	MOV		[B5], 01H
	ADD 	[P14], 00011000B
	ADD		[P15], 00011000B
	CALL	SET_TIMER
	RET
J42:
	MOV		[B5], 02H
	ADD 	[P24], 00011000B
	ADD		[P25], 00011000B
	CALL	SET_TIMER
	RET	
FILL4:
	CALL 	TONE
	RET
	
;5	
L5: CMP		AL, 05H
	JNE		L6
	XOR		AX, AX
	MOV 	CL, [B6]
	AND		CL, 0FFH		
	JNZ		FILL5
	TEST	[PLAYER], 00000001B
	JNE		J52
	MOV		[B6], 01H
	ADD 	[P14], 11000000B
	ADD		[P15], 11000000B
	CALL	SET_TIMER
	RET
J52:
	MOV		[B6], 02H
	ADD 	[P24], 11000000B
	ADD		[P25], 11000000B
	CALL	SET_TIMER
	RET	
FILL5:
	CALL 	TONE
	
;6
L6: CMP		AL, 06H
	JNE		L7
	XOR		AX, AX
	MOV 	CL, [B7]
	AND		CL, 0FFH		
	JNZ		FILL6
	TEST	[PLAYER], 00000001B
	JNE		J62
	MOV		[B7], 01H
	ADD 	[P17], 00000011B
	ADD		[P18], 00000011B
	CALL	SET_TIMER
	RET
J62:
	MOV		[B7], 02H
	ADD 	[P27], 00000011B
	ADD		[P28], 00000011B
	CALL	SET_TIMER
	RET	
FILL6:
	CALL 	TONE
	RET
	
;7
L7: CMP		AL, 07H
	JNE		L8
	XOR		AX, AX
	MOV 	CL, [B8]
	AND		CL, 0FFH		
	JNZ		FILL7
	TEST	[PLAYER], 00000001B
	JNE		J72
	MOV		[B8], 01H
	ADD 	[P17], 00011000B
	ADD		[P18], 00011000B
	CALL	SET_TIMER
	RET
J72:
	MOV		[B8], 02H
	ADD 	[P27], 00011000B
	ADD		[P28], 00011000B
	CALL	SET_TIMER
	RET	
FILL7:
	CALL 	TONE
	RET	
	
;8
L8: CMP		AL, 08H
	JNE		FILL8
	XOR		AX, AX
	MOV 	CL, [B9]
	AND		CL, 0FFH		
	JNZ		FILL8
	TEST	[PLAYER], 00000001B
	JNE		J82
	MOV		[B9], 01H
	ADD 	[P17], 11000000B
	ADD		[P18], 11000000B
	CALL	SET_TIMER
	RET
J82:
	MOV		[B9], 02H
	ADD 	[P27], 11000000B
	ADD		[P28], 11000000B
	CALL	SET_TIMER
	RET	
FILL8:
	CALL 	TONE
	RET	

;CHECK FOR PATTERNS
CHECK:
	PUSH	CX
	PUSH	BX
	PUSH	AX
	
	MOV 	BH, [B1]
	MOV		BL, [B2]
	CMP		BH, 000H
	JE		C2
	CMP		BL, 000H
	JE		C2
	CMP		BH, BL
	JNE		C2
	MOV		BH, [B3]
	CMP		BH, 000H
	JE		C2
	CMP		BH, BL
	JNE		C2
	CALL	WIN
	
	POP		AX
	POP		BX
	POP		CX
	RET

C2:
	MOV 	BH, [B4]
	MOV		BL, [B5]
	CMP		BH, 000H
	JE		C3
	CMP		BL, 000H
	JE		C3
	CMP		BH, BL
	JNE		C3
	MOV		BH, [B6]
	CMP		BH, 000H
	JE		C3
	CMP		BH, BL
	JNE		C3
	CALL	WIN
	
	POP		AX
	POP		BX
	POP		CX
	RET
	
C3:
	MOV 	BH, [B7]
	MOV		BL, [B8]
	CMP		BH, 000H
	JE		C4
	CMP		BL, 000H
	JE		C4
	CMP		BH, BL
	JNE		C4
	MOV		BH, [B9]
	CMP		BH, 000H
	JE		C4
	CMP		BH, BL
	JNE		C4
	CALL	WIN
	
	POP		AX
	POP		BX
	POP		CX
	RET
	
C4:
	MOV 	BH, [B1]
	MOV		BL, [B4]
	CMP		BH, 000H
	JE		C5
	CMP		BL, 000H
	JE		C5
	CMP		BH, BL
	JNE		C5
	MOV		BH, [B7]
	CMP		BH, 000H
	JE		C5
	CMP		BH, BL
	JNE		C5
	CALL	WIN
	
	POP		AX
	POP		BX
	POP		CX
	RET
	
C5:
	MOV 	BH, [B2]
	MOV		BL, [B5]
	CMP		BH, 000H
	JE		C6
	CMP		BL, 000H
	JE		C6
	CMP		BH, BL
	JNE		C6
	MOV		BH, [B8]
	CMP		BH, 000H
	JE		C6
	CMP		BH, BL
	JNE		C6
	CALL	WIN
	
	POP		AX
	POP		BX
	POP		CX
	RET
	
C6:
	MOV 	BH, [B3]
	MOV		BL, [B6]
	CMP		BH, 000H
	JE		C7
	CMP		BL, 000H
	JE		C7
	CMP		BH, BL
	JNE		C7
	MOV		BH, [B9]
	CMP		BH, 000H
	JE		C7
	CMP		BH, BL
	JNE		C7
	CALL	WIN
	
	POP		AX
	POP		BX
	POP		CX
	RET
	
C7:
	MOV 	BH, [B1]
	MOV		BL, [B5]
	CMP		BH, 000H
	JE		C8
	CMP		BL, 000H
	JE		C8
	CMP		BH, BL
	JNE		C8
	MOV		BH, [B9]
	CMP		BH, 000H
	JE		C8
	CMP		BH, BL
	JNE		C8
	CALL	WIN
	
	POP		AX
	POP		BX
	POP		CX
	RET
	
C8:
	MOV 	BH, [B3]
	MOV		BL, [B5]
	CMP		BH, 000H
	JE		C9
	CMP		BL, 000H
	JE		C9
	CMP		BH, BL
	JNE		C9
	MOV		BH, [B7]
	CMP		BH, 000H
	JE		C9
	CMP		BH, BL
	JNE		C9
	CALL	WIN

	POP		AX
	POP		BX
	POP		CX
	RET
	
C9:
	MOV 	CL, [B1]
	AND		CL, 0FFH		
	JZ		RETMAIN
	MOV 	CL, [B2]
	AND		CL, 0FFH		
	JZ		RETMAIN
	MOV 	CL, [B3]
	AND		CL, 0FFH		
	JZ		RETMAIN
	MOV 	CL, [B4]
	AND		CL, 0FFH		
	JZ		RETMAIN
	MOV 	CL, [B5]
	AND		CL, 0FFH		
	JZ		RETMAIN
	MOV 	CL, [B6]
	AND		CL, 0FFH		
	JZ		RETMAIN
	MOV 	CL, [B7]
	AND		CL, 0FFH		
	JZ		RETMAIN
	MOV 	CL, [B8]
	AND		CL, 0FFH		
	JZ		RETMAIN
	MOV 	CL, [B9]
	AND		CL, 0FFH		
	JZ		RETMAIN
	CALL	NO_WIN
	
RETMAIN:
	POP		AX
	POP		BX
	POP		CX
	RET

INITIALIZE:
	;INITIALIZE DOT MATRIX, LED, AND 7SEG
	MOV		AL, 10000000B	;ALL OUTPUT MODE
	OUT		PPIC_C, AL
	OUT		LED_C, AL
	
	;INITIALIZE VARIABLES
	MOV		[PLAYER], 00000000B

	MOV		[ROW], 11111110B

	MOV		[ROW1],	024H
	MOV		[ROW2],	024H
	MOV		[ROW3],	0FFH
	MOV		[ROW4], 024H
	MOV		[ROW5],	024H
	MOV		[ROW6],	0FFH
	MOV		[ROW7], 024H
	MOV		[ROW8],	024H

	MOV		[B1], 	000H
	MOV		[B2],	000H
	MOV		[B3],	000H
	MOV		[B4],	000H
	MOV		[B5],	000H
	MOV		[B6],	000H
	MOV		[B7],	000H
	MOV		[B8],	000H
	MOV		[B9],	000H

	MOV		[P11], 	000H
	MOV		[P12], 	000H
	MOV		[P13], 	000H
	MOV		[P14], 	000H
	MOV		[P15], 	000H
	MOV		[P16], 	000H
	MOV		[P17], 	000H
	MOV		[P18], 	000H

	MOV		[P21], 	000H
	MOV		[P22], 	000H
	MOV		[P23], 	000H
	MOV		[P24], 	000H
	MOV		[P25], 	000H
	MOV		[P26], 	000H
	MOV		[P27], 	000H
	MOV		[P28], 	000H

	RET

;LCD FUNCTIONS
;INITIALIZE LCD
INIT_LCD:
	;LCD CLEAR
	CALL	ALLCLR
	CALL	ENTMODE
	
	;INITIALIZE LCD OUTPUT
	CALL	CURSOR1
	MOV		AL, 00001100B   ;DISP MODE
	CALL 	LNXX

	CALL 	STRING

	MOV AH, 90H
	CALL LNXX
	
	RET	
	
;DISPLAY SCORE	
DISP_SCORE:		
	MOV 	AH, 86H 
	CALL 	LNXX
	MOV  	AH, P1_SCORE
	OR   	AH, 30H
	CALL 	CHAROUT
			
	MOV 	AH, 8FH
	CALL 	LNXX
	MOV  	AH, P2_SCORE
	OR   	AH,30H
	CALL 	CHAROUT
	MOV 	AH, 90H
	CALL 	LNXX

	RET
	
;LCD MANIPULATION
ALLCLR:	
	MOV		AH,01H
	JMP		LNXX

ENTMODE:
	MOV		AH, 00000110B
	JMP		LNXX
	
CURSOR1: 
	MOV		AH, 80H
	
LNXX:	
	CALL	BUSY
	MOV		AL,AH
	OUT		LCDC,AL
	RET
	
BUSY:	
	IN		AL,LCDC_S 
	AND		AL,10000000B
	JNZ		BUSY
	RET
	
CHAROUT:
	CALL	BUSY
	MOV		AL,AH
	OUT		LCDD,AL
	RET
	
STRING:	
	MOV		AH, BYTE PTR CS:[SI]
	CMP		AH,00H
	JE		STRING1
	CALL	BUSY
	CALL	CHAROUT
	INC		SI
	JMP 	STRING
STRING1:
	RET
	
;TIMER FOR OUTPUTS
TIMER:
	PUSH	CX
	MOV		CX, 0000FH

TIMER1:
	NOP
	NOP
	NOP

	LOOP	TIMER1
	POP		CX
	RET

;TIMER FOR BLINKING OUTPUT
DEL_TIMER:
	PUSH	CX
	MOV		CX, 0FFFFH

DEL_TIMER1:
	NOP
	NOP
	NOP

	LOOP	DEL_TIMER1
	POP		CX
	RET

;TONE FOR INVALID INPUT	
TONE:	
	PUSH 	CX
	PUSH 	AX

	MOV 	AH, 50
	MOV 	AL, 1
TONE2:	
	MOV 	CX, 200
	OUT 	SPK, AL
TONE1:	
	LOOP	TONE1
	XOR 	AL, 1
	DEC 	AH
	JNZ 	TONE2
	
	XOR 	AL, AL
	OUT 	SPK, AL
	
	POP 	AX
	POP 	CX
	RET
	
WIN:	
	PUSH 	CX
	PUSH 	AX
	MOV		BH, 00000000B
	CMP		BX, 2;
	JE		P2WIN;
	MOV		SI, OFFSET P1WIN_MES;
	JMP		PROCEED;
P2WIN:;
	MOV		SI, OFFSET P2WIN_MES;
PROCEED:;	
	PUSH	BX

	MOV 	AH, 0C0H;
	CALL 	LNXX;
	CALL 	STRING;
	MOV 	AH, 90H;
	CALL 	LNXX;
	
	MOV 	BX, 000FFH
	MOV 	AL, 1
WINTONE2:	
	MOV 	CX, 200
	OUT 	SPK, AL
WINTONE1:	
	LOOP	WINTONE1
	XOR 	AL, 1
	DEC 	BX
	JNZ 	WINTONE2
	
	XOR 	AL, AL
	OUT 	SPK, AL
	
	MOV		CX, 3
W_OUT:
	MOV		DX, 000FFH
W_LOOP:
	CALL	OUTPUT
	DEC		DX
	JNZ		W_LOOP
	CALL	DEL_TIMER
	CALL	DEL_TIMER
	CALL	DEL_TIMER
	LOOP	W_OUT
	
	POP		BX
	INC		[P1_SCORE + BX - 1]
	CALL	DISP_SCORE
	
	MOV		SI, OFFSET CLEAR_LCDROW;
	MOV 	AH, 0C0H;
	CALL 	LNXX;
	CALL 	STRING;
	MOV 	AH, 90H;
	CALL 	LNXX;
	
	POP		AX
	POP		CX
	
	CMP		[P1_SCORE+ BX - 1], 9;
	JNE		CONTINUE;
	GOTO	START;
CONTINUE:;
	CALL	INITIALIZE
	RET

NO_WIN:
	PUSH 	CX
	PUSH 	AX
	PUSH	BX
	
	MOV		SI, OFFSET NOWIN_MES;
	MOV 	AH, 0C0H;
	CALL 	LNXX;
	CALL 	STRING;
	MOV 	AH, 90H;
	CALL 	LNXX;
	
	MOV		CX, 3
NOW_OUT:
	MOV		DX, 000FFH
NOW_LOOP:
	CALL	OUTPUT
	DEC		DX
	JNZ		NOW_LOOP
	CALL	DEL_TIMER
	CALL	DEL_TIMER
	CALL	DEL_TIMER
	LOOP	NOW_OUT
	
	POP		BX
	POP		AX
	POP		CX
	
	MOV		SI, OFFSET CLEAR_LCDROW;
	MOV 	AH, 0C0H;
	CALL 	LNXX;
	CALL 	STRING;
	MOV 	AH, 90H;
	CALL 	LNXX;
	
	CALL	INITIALIZE
	RET
	
CODE ENDS

END